// Code generated by MockGen. DO NOT EDIT.
// Source: web_client_interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	domain "Garantex_grpc/internal/domain"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockWebClient is a mock of WebClient interface.
type MockWebClient struct {
	ctrl     *gomock.Controller
	recorder *MockWebClientMockRecorder
}

// MockWebClientMockRecorder is the mock recorder for MockWebClient.
type MockWebClientMockRecorder struct {
	mock *MockWebClient
}

// NewMockWebClient creates a new mock instance.
func NewMockWebClient(ctrl *gomock.Controller) *MockWebClient {
	mock := &MockWebClient{ctrl: ctrl}
	mock.recorder = &MockWebClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWebClient) EXPECT() *MockWebClientMockRecorder {
	return m.recorder
}

// GetRatesFromDepth mocks base method.
func (m *MockWebClient) GetRatesFromDepth(ctx context.Context, market string) (domain.Rates, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRatesFromDepth", ctx, market)
	ret0, _ := ret[0].(domain.Rates)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRatesFromDepth indicates an expected call of GetRatesFromDepth.
func (mr *MockWebClientMockRecorder) GetRatesFromDepth(ctx, market interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRatesFromDepth", reflect.TypeOf((*MockWebClient)(nil).GetRatesFromDepth), ctx, market)
}
