// Code generated by MockGen. DO NOT EDIT.
// Source: storage_interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	domain "Garantex_grpc/internal/domain"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockStorager is a mock of Storager interface.
type MockStorager struct {
	ctrl     *gomock.Controller
	recorder *MockStoragerMockRecorder
}

// MockStoragerMockRecorder is the mock recorder for MockStorager.
type MockStoragerMockRecorder struct {
	mock *MockStorager
}

// NewMockStorager creates a new mock instance.
func NewMockStorager(ctrl *gomock.Controller) *MockStorager {
	mock := &MockStorager{ctrl: ctrl}
	mock.recorder = &MockStoragerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorager) EXPECT() *MockStoragerMockRecorder {
	return m.recorder
}

// SaveRates mocks base method.
func (m *MockStorager) SaveRates(ctx context.Context, rates domain.Rates) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveRates", ctx, rates)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveRates indicates an expected call of SaveRates.
func (mr *MockStoragerMockRecorder) SaveRates(ctx, rates interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveRates", reflect.TypeOf((*MockStorager)(nil).SaveRates), ctx, rates)
}
